PHONY := __build
__build:
	
	
obj-y := 
subdir-y := 

include Makefile

__subdir-y := $(patsubst %/, %, $(filter %/, $(obj-y)))
subdir-y += $(__subdir-y)

subdir_objs := $(foreach f, $(subdir-y), $(f)/build-in.o)

cur_objs := $(filter-out %/, $(obj-y))
dep_files := $(foreach f, $(cur_objs), .$(f).d)
dep_files := $(wildcard $(dep_files))

ifneq ($(dep_files),)
	include $(dep_files)
endif

PHONY += $(subdir-y)

$(subdir-y):
	make -C $@ -f $(TOPDIR)/Makefile.build

__build: $(subdir-y) build-in.o 


build-in.o : $(cur_objs) $(subdir_objs)
	$(LD) -r -o $@ $^
	
dep_file = .$@.d 

%.o : %.c 
	$(CC) $(CFLAGS) -Wp,-MD,$(dep_file) -c -o $@ $<

.PHONY: $(PHONY)